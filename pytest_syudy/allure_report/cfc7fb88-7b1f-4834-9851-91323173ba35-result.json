{"labels": [{"name": "package", "value": "test_allure_story"}], "stop": 1604059842835, "status": "failed", "attachments": [{"name": "这是一个图片", "type": "image/png", "source": "28363fec-aad3-44d3-a5f9-c39438b0dfe5-attachment.png"}], "fullName": "test_allure_story#test_attach_photo", "statusDetails": {"trace": "def test_attach_photo():\n>       allure.attach.file(\"/home/ubuntu/Desktop/from 2020-10-30 17-27-00.png\", name=\"这是一个图片\", attachment_type=allure.attachment_type.PNG)\n\ntest_allure_story.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/usr/local/lib/python3.5/dist-packages/allure_commons/_allure.py:130: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n/usr/local/lib/python3.5/dist-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n/usr/local/lib/python3.5/dist-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n/usr/local/lib/python3.5/dist-packages/pluggy/manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n/usr/local/lib/python3.5/dist-packages/allure_pytest/listener.py:177: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n/usr/local/lib/python3.5/dist-packages/allure_commons/reporter.py:94: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n/usr/local/lib/python3.5/dist-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n/usr/local/lib/python3.5/dist-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n/usr/local/lib/python3.5/dist-packages/pluggy/manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n/usr/local/lib/python3.5/dist-packages/allure_commons/logger.py:43: in report_attached_file\n    shutil.copy2(source, destination)\n/usr/lib/python3.5/shutil.py:251: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = '/home/ubuntu/Desktop/from 2020-10-30 17-27-00.png', dst = './allure_report/28363fec-aad3-44d3-a5f9-c39438b0dfe5-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        for fn in [src, dst]:\n            try:\n                st = os.stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n    \n        if not follow_symlinks and os.path.islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: '/home/ubuntu/Desktop/from 2020-10-30 17-27-00.png'\n\n/usr/lib/python3.5/shutil.py:114: FileNotFoundError", "message": "FileNotFoundError: [Errno 2] No such file or directory: '/home/ubuntu/Desktop/from 2020-10-30 17-27-00.png'"}, "uuid": "fb078fd3-35a8-4674-b5bb-30029284e2ca", "name": "test_attach_photo", "historyId": "f5dc79bc4409249624cb763fe0f304e7", "start": 1604059842835}