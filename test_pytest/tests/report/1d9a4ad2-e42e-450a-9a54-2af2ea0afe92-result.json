{"fullName": "test_calc.TestCalc#test_mul2[0.1-0.1-0.01]", "historyId": "6a7e4c94eb6abe33880bc9961e46d0c9", "stop": 1604066153399, "parameters": [{"value": "0.1", "name": "a"}, {"value": "0.1", "name": "b"}, {"value": "0.01", "name": "c"}], "uuid": "29180ad1-4640-440f-9a78-80d4d01e7ed7", "labels": [{"value": "乘法浮点数测试用例", "name": "story"}, {"value": "test_calc", "name": "package"}], "status": "failed", "statusDetails": {"message": "AssertionError: assert 0.010000000000000002 == 0.01\n +  where 0.010000000000000002 = <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x7f3c518da400>>(0.1, 0.1)\n +    where <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x7f3c518da400>> = <test_pytest.core.calc.Calc object at 0x7f3c518da400>.mul\n +      where <test_pytest.core.calc.Calc object at 0x7f3c518da400> = <test_pytest.tests.test_calc.TestCalc object at 0x7f3c51875a20>.calc", "trace": "self = <test_pytest.tests.test_calc.TestCalc object at 0x7f3c51875a20>, a = 0.1, b = 0.1, c = 0.01\n\n    @allure.story(\"乘法浮点数测试用例\")\n    @pytest.mark.parametrize('a, b, c', [\n        [0.5, 0.5, 0.25],\n        [0, 0.5, 0],\n        [0.5, 0, 0],\n        [0.1, 0.1, 0.01],\n    ])\n    def test_mul2(self, a, b, c):\n>       assert self.calc.mul(a, b) == c\nE       assert 0.010000000000000002 == 0.01\nE        +  where 0.010000000000000002 = <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x7f3c518da400>>(0.1, 0.1)\nE        +    where <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x7f3c518da400>> = <test_pytest.core.calc.Calc object at 0x7f3c518da400>.mul\nE        +      where <test_pytest.core.calc.Calc object at 0x7f3c518da400> = <test_pytest.tests.test_calc.TestCalc object at 0x7f3c51875a20>.calc\n\ntest_calc.py:33: AssertionError"}, "name": "test_mul2[0.1-0.1-0.01]", "start": 1604066153399}